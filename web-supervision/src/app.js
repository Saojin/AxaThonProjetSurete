'use strict';
(function () {
    appConfig.$inject = ["$mdThemingProvider", "$routeProvider", "uiGmapGoogleMapApiProvider"];
    var app = angular.module('axasafe', ['ngMaterial', 'ngRoute', 'uiGmapgoogle-maps', 'ngResource']);
    app.config(appConfig);
    function appConfig($mdThemingProvider, $routeProvider, uiGmapGoogleMapApiProvider) {
        'ngInject';
        $mdThemingProvider.theme('default')
            .primaryPalette('pink')
            .accentPalette('orange');
        $routeProvider.when('/', {
            templateUrl: 'views/regie.html',
            controller: 'RegieCtrl',
            controllerAs: 'ctrl'
        }).otherwise({ redirectTo: '/' });
        uiGmapGoogleMapApiProvider.configure({
            key: 'AIzaSyA_JkeKrjvKkqqCcXYhQXRIEoUFIgs6iRY',
            v: '3.20',
            libraries: 'weather,geometry,visualization'
        });
    }
    app.constant('apiBaseUrl', 'http://team18-axasafe.azurewebsites.net');
    app.controller('RegieCtrl', AxaSafeControllers.RegieCtrl);
    app.service('RegieService', AxaSafeServices.RegieService);
    app.service('UserService', AxaSafeServices.UserService);
})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAudHMiLCJzcmMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOztnR0FFQSxDQUFDLFlBQUE7SUFDRyxJQUFJLE1BQWlCLFFBQVEsT0FBTyxXQUFXLENBQUMsY0FBYSxXQUFVLHFCQUFvQjtJQUMzRixJQUFJLE9BQU87SUFFWCxTQUFBLFVBQW1CLG9CQUFpRCxnQkFBdUMsNEJBQThCO1FBQ3JJO1FBRUEsbUJBQW1CLE1BQU07YUFDcEIsZUFBZTthQUNmLGNBQWM7UUFFZixlQUFlLEtBQUssS0FBSztZQUNyQixhQUFhO1lBQ2IsWUFBWTtZQUNaLGNBQWM7V0FDZixVQUFVLEVBQUUsWUFBWTtRQUUzQiwyQkFBMkIsVUFBVTtZQUNqQyxLQUFLO1lBQ0wsR0FBRztZQUNILFdBQVc7OztJQUl2QixJQUFJLFNBQVMsY0FBYztJQUMzQixJQUFJLFdBQVcsYUFBYSxtQkFBbUI7SUFDL0MsSUFBSSxRQUFRLGdCQUFpQixnQkFBZ0I7SUFDN0MsSUFBSSxRQUFRLGVBQWdCLGdCQUFnQjs7QUNOaEQiLCJmaWxlIjoic3JjL2FwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL3RzZC5kLnRzXCIgLz5cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbigoKSA9PiB7XHJcbiAgICB2YXIgYXBwOm5nLklNb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgnYXhhc2FmZScsIFsnbmdNYXRlcmlhbCcsJ25nUm91dGUnLCd1aUdtYXBnb29nbGUtbWFwcycsJ25nUmVzb3VyY2UnXSk7XHJcbiAgICBhcHAuY29uZmlnKGFwcENvbmZpZyk7XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGFwcENvbmZpZygkbWRUaGVtaW5nUHJvdmlkZXI6bmcubWF0ZXJpYWwuSVRoZW1pbmdQcm92aWRlciwgJHJvdXRlUHJvdmlkZXI6bmcucm91dGUuSVJvdXRlUHJvdmlkZXIsdWlHbWFwR29vZ2xlTWFwQXBpUHJvdmlkZXI6YW55KSB7IFxyXG4gICAgICAgICduZ0luamVjdCc7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJG1kVGhlbWluZ1Byb3ZpZGVyLnRoZW1lKCdkZWZhdWx0JylcclxuICAgICAgICAgICAgLnByaW1hcnlQYWxldHRlKCdwaW5rJylcclxuICAgICAgICAgICAgLmFjY2VudFBhbGV0dGUoJ29yYW5nZScpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsIHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcmVnaWUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnUmVnaWVDdHJsJyxcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2N0cmwnXHJcbiAgICAgICAgICAgIH0pLm90aGVyd2lzZSh7IHJlZGlyZWN0VG86ICcvJyB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHVpR21hcEdvb2dsZU1hcEFwaVByb3ZpZGVyLmNvbmZpZ3VyZSh7XHJcbiAgICAgICAgICAgICAgICBrZXk6ICdBSXphU3lBX0prZUtyanZLa3FxQ2NYWWhRWFJJRW9VRklnczZpUlknLFxyXG4gICAgICAgICAgICAgICAgdjogJzMuMjAnLCAvL2RlZmF1bHRzIHRvIGxhdGVzdCAzLlggYW55aG93XHJcbiAgICAgICAgICAgICAgICBsaWJyYXJpZXM6ICd3ZWF0aGVyLGdlb21ldHJ5LHZpc3VhbGl6YXRpb24nXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGFwcC5jb25zdGFudCgnYXBpQmFzZVVybCcsICdodHRwOi8vdGVhbTE4LWF4YXNhZmUuYXp1cmV3ZWJzaXRlcy5uZXQnKTtcclxuICAgIGFwcC5jb250cm9sbGVyKCdSZWdpZUN0cmwnLCBBeGFTYWZlQ29udHJvbGxlcnMuUmVnaWVDdHJsKTtcclxuICAgIGFwcC5zZXJ2aWNlKCdSZWdpZVNlcnZpY2UnLCAgQXhhU2FmZVNlcnZpY2VzLlJlZ2llU2VydmljZSk7XHJcbiAgICBhcHAuc2VydmljZSgnVXNlclNlcnZpY2UnLCAgQXhhU2FmZVNlcnZpY2VzLlVzZXJTZXJ2aWNlKTtcclxufSkoKTsiLCIndXNlIHN0cmljdCc7XG4oZnVuY3Rpb24gKCkge1xuICAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXhhc2FmZScsIFsnbmdNYXRlcmlhbCcsICduZ1JvdXRlJywgJ3VpR21hcGdvb2dsZS1tYXBzJywgJ25nUmVzb3VyY2UnXSk7XG4gICAgYXBwLmNvbmZpZyhhcHBDb25maWcpO1xuICAgIGZ1bmN0aW9uIGFwcENvbmZpZygkbWRUaGVtaW5nUHJvdmlkZXIsICRyb3V0ZVByb3ZpZGVyLCB1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlcikge1xuICAgICAgICAnbmdJbmplY3QnO1xuICAgICAgICAkbWRUaGVtaW5nUHJvdmlkZXIudGhlbWUoJ2RlZmF1bHQnKVxuICAgICAgICAgICAgLnByaW1hcnlQYWxldHRlKCdwaW5rJylcbiAgICAgICAgICAgIC5hY2NlbnRQYWxldHRlKCdvcmFuZ2UnKTtcbiAgICAgICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcmVnaWUuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnUmVnaWVDdHJsJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2N0cmwnXG4gICAgICAgIH0pLm90aGVyd2lzZSh7IHJlZGlyZWN0VG86ICcvJyB9KTtcbiAgICAgICAgdWlHbWFwR29vZ2xlTWFwQXBpUHJvdmlkZXIuY29uZmlndXJlKHtcbiAgICAgICAgICAgIGtleTogJ0FJemFTeUFfSmtlS3JqdktrcXFDY1hZaFFYUklFb1VGSWdzNmlSWScsXG4gICAgICAgICAgICB2OiAnMy4yMCcsXG4gICAgICAgICAgICBsaWJyYXJpZXM6ICd3ZWF0aGVyLGdlb21ldHJ5LHZpc3VhbGl6YXRpb24nXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhcHAuY29uc3RhbnQoJ2FwaUJhc2VVcmwnLCAnaHR0cDovL3RlYW0xOC1heGFzYWZlLmF6dXJld2Vic2l0ZXMubmV0Jyk7XG4gICAgYXBwLmNvbnRyb2xsZXIoJ1JlZ2llQ3RybCcsIEF4YVNhZmVDb250cm9sbGVycy5SZWdpZUN0cmwpO1xuICAgIGFwcC5zZXJ2aWNlKCdSZWdpZVNlcnZpY2UnLCBBeGFTYWZlU2VydmljZXMuUmVnaWVTZXJ2aWNlKTtcbiAgICBhcHAuc2VydmljZSgnVXNlclNlcnZpY2UnLCBBeGFTYWZlU2VydmljZXMuVXNlclNlcnZpY2UpO1xufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=
